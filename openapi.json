{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Daedalus-Core",
    "contact": {
      "email": "acastellano@daedalus-project.io",
      "url": "https://daedalus-project.io/contact"
    },
    "license": {
      "name": "GNU General Public License 3.0",
      "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
    },
    "x-logo": {
      "url": "https://apis.guru/openapi-template/logo.png"
    },
    "description": "This is the Daedalus Poject Core API specification.\n# Introduction\nThis specification is intended to to be a good starting point for describing this API, offering developers examples for working with it.\n"
  },
  "externalDocs": {
    "description": "Daedalus Project Docs",
    "url": "https://readthedocs.org"
  },
  "tags": [
    {
      "name": "Ping",
      "description": "Checks if service is working"
    },
    {
      "name": "Login",
      "description": "User login"
    },
    {
      "name": "ImAdmin",
      "description": "User imadmin"
    },
    {
      "name": "Register",
      "description": "User register"
    },
    {
      "name": "Confirm",
      "description": "Confirm user registration"
    }
  ],
  "servers": [
    {
      "url": "https://api-dev.daedalus-project.io"
    }
  ],
  "paths": {
    "/echo": {
      "post": {
        "tags": [
          "Echo"
        ],
        "summary": "Echo test",
        "description": "Receive the exact message you've sent",
        "operationId": "echo",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "response": {
                    "value": "Hello world!"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "Hello world!"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string",
                "example": "Hello world!"
              }
            }
          },
          "description": "Echo payload",
          "required": true
        },
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "API.v1.Echo echo = new API.v1.Echo();\necho.message = \"Hello World!\");\nEchoResponse response = echo.post();\nif (response.statusCode == HttpStatusCode.Created)\n{\n  // Success\n}\nelse\n{\n  // Something wrong -- check response for errors\n  Console.WriteLine(response.getRawResponse());\n}\n"
          },
          {
            "lang": "PHP",
            "source": "$form = new \\API\\Entities\\Echo();\n$form->setMessage(\"Hello World!\");\ntry {\n    $pet = $client->echo()->post($form);\n} catch (UnprocessableEntityException $e) {\n    var_dump($e->getErrors());\n}\n"
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "summary": "Ping",
        "description": "Checks if service is working",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "If API is working it returns \"pong\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": "{\"status\":\"pong\"}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/confirm": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Confirm User Registration",
        "description": "Registered users must activate their account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "auth_token",
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "auth_token": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "0": {
                  "value": null
                },
                "1": {
                  "value": {
                    "auth_token": "invaid_token"
                  }
                },
                "2": {
                  "value": {
                    "auth_token": "ubV8bzBc4utKXtyDQIJ7em1OQuP2FUUo4rb9nXwRoq8jr3e9dwzfSNqrSHvShMc"
                  }
                },
                "3": {
                  "value": {
                    "auth_token": "ubV8bzBc4utKXtyDQIJ7em1OQuP2FUUo4rb9nXwRoq8jr3e9dwzfSNqrSHvShMc",
                    "password": "poorone"
                  }
                },
                "4": {
                  "value": {
                    "auth_token": "ubV8bzBc4utKXtyDQIJ7em1OQuP2FUUo4rb9nXwRoq8jr3e9dwzfSNqrSHvShMc",
                    "password": "val1d_Pa55w0rd"
                  }
                },
                "5": {
                  "value": {
                    "auth_token": "ubV8bzBc4utKXtyDQIJ7em1OQuP2FUUo4rb9nXwRoq8jr3e9dwzfSNqrSHvShMc",
                    "password": "val1d_Pa55w0rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Correct response, auth and correct password are provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 1,
                      "message": "Account activated."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed examples, incorrect data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 0,
                      "message": "Invalid Auth Token."
                    }
                  },
                  "1": {
                    "value": {
                      "status": 0,
                      "message": "Invalid Auth Token."
                    }
                  },
                  "2": {
                    "value": {
                      "status": 0,
                      "message": "Invalid Auth Token."
                    }
                  },
                  "3": {
                    "value": {
                      "status": 0,
                      "message": "Valid Auth Token found, enter your new password."
                    }
                  },
                  "4": {
                    "value": {
                      "status": 0,
                      "message": "Password is invalid."
                    }
                  },
                  "5": {
                    "value": {
                      "status": 0,
                      "message": "Invalid Auth Token."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/imadmin": {
      "get": {
        "tags": [
          "ImAdmin"
        ],
        "summary": "User ImAdmin",
        "description": "Returns if user is admin",
        "security": [
          {
            "token_security": []
          }
        ],
        "responses": {
          "200": {
            "description": "Examples of success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 1,
                      "message": "You are an admin user."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Examples of failed requests because users did not provide their session token or their session token has expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Session token invalid.",
                        "No session token provided.",
                        "Session token expired."
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 0,
                      "message": "Session token invalid."
                    }
                  },
                  "1": {
                    "value": {
                      "status": 0,
                      "message": "No session token provided."
                    }
                  },
                  "2": {
                    "value": {
                      "status": 0,
                      "message": "Session token expired."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Examples of failed requests because users are not admin ones.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "You are not an admin user."
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 0,
                      "message": "You are not an admin user."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "User Login",
        "description": "Users are allowed to log in into Daedalus Core",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "e-mail",
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "e-mail": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "0": {
                  "value": {
                    "auth": {
                      "email": "admin@daedalus-project.io",
                      "password": "validPa55word_conTaining_Mul7ple_c:h:a:r;s"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If login success, return user data and session token, superadmin users receive _hidden_data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "status",
                    "message"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "session_token",
                        "user"
                      ],
                      "properties": {
                        "session_token": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "required": [
                            "is_admin",
                            "phone",
                            "api_key",
                            "surname",
                            "name",
                            "active",
                            "email"
                          ],
                          "properties": {
                            "is_admin": {
                              "type": "integer"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "api_key": {
                              "type": "string"
                            },
                            "surname": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "active": {
                              "type": "integer"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "_hidden_data": {
                      "type": "object",
                      "required": [
                        "user"
                      ],
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "is_super_admin": {
                              "type": "integer"
                            },
                            "id": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        1
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 1,
                      "data": {
                        "session_token": "eyJhbGciOiJSUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNTM3NzY1MzYwfQ.Rlok8kfLDp3134Frf2RZXqLtB_hRnsRmyLrR8Ni9IfpgdunZSJggiRlwCiCvOAlG0XJUPXLuwF5FP1DcuY3sILUyk0sm_74E_tvGJXrjEaOsbloKCmurmRAvPnrX9PtOqFODO1By-emm0nsnKebz2Mc09b5pmu1wtwI0Qp5SzgeW_-tVyrbANmh2r7FjkuO19ErUU5TnGrjBRURnfIDYEhS6Dd6kwmeqIelEqzkYywHMyaIHvwZaNxn9xO8GFh5Q_ahXp95ZtWkkX904alJlXPPKbp2i42V3ct6CiJC6PfF0UXTCrN7XK3JB8dgc_9gwT1OVK0DuF2UpWCF9eyhRV0BVAMFchLB52lGxzAL5sg3D7uGAED3B9QlSUDddoZbThrJQjxOxQqvWVzE9yJd-Ene92FNIR6OnKp4wXnZU_qFjV-RdhMycPjmdzgZZ71S4Ax1S9BMMxlvSBLiodPo-MxtFlWt2qb49gnXblGf649XML0Jd12-4hY3FzJ54vbOTWRarqQd9wLmlmAZxULk8zF7XMaJy29bCXI53pt5cpm8FsjMY9GubV8GCopj0EvXUJtoaZFgqJsqhAeqHcSd-RHpzLMKL0na04LoOIWQJWfiXe4nfCJDPhZCKV4lCdsScEDTM29L41f4SXTAMZkgPMIyo5G5_PL2U5Jq10iS9_As",
                        "user": {
                          "name": "Admin",
                          "email": "admin@daedalus-project.io",
                          "active": 1,
                          "is_admin": 1,
                          "phone": "",
                          "surname": "User",
                          "api_key": "jHkE6BcnNNYIQFGlJiYzrRVo6Feypv5p"
                        }
                      },
                      "message": "Auth Successful.",
                      "_hidden_data": {
                        "user": {
                          "is_super_admin": 1,
                          "id": 1
                        }
                      }
                    }
                  },
                  "1": {
                    "value": {
                      "status": 1,
                      "data": {
                        "session_token": "eyJhbGciOiJSUzI1NiJ9.eyJleHAiOjE1Mzc3NjY3MDMsImlkIjoyfQ.1ZAu03ug1RjKpAebsaxaRRWiM9fmjQ0y98so3eXuc6h1QuV7fP-AGGmbTJFe-FKEQ5XIQALLI0yejlF2-EMIWfWMupHLVOzjrCqMtzC-fZ3x-2PwOQCUAi-2n9QVC1C8XezeacHBmxbXqdFcU86TKZujpCHHxrLSSIQKMxqk-HeiNBQ9ZmCiKaq3EK9X598VpTFUfItMVGQuoxdFHEAseqa6xT9ZC8vjf8R6AB5rqzoHGfAG2CRkdJ-Jl53mGkeNjnVM_G2K5YDSjAQCSwVHbYL8k_JEhUke7eFsjnaNJ1cZPJDQlGigHc9ue8AVn1LJ_nWx-XiI6xoEq_5SP5y6euspESMko5Zq0uQO5n71P-M8G7GJnEhMF1tlufJCx39CKdtOHAqJwoJyMroYRQ_1dfhz6gCUs85-j_oaejlSgAEORy1FB0Tq7OlMH8BMqlPW2n39eeRyVTs7VEhSEbktp6oYa9gLTaTz91AJtb0Lq6QlN_dZ7g8_PBsUgwRfW-H6aOZ6qBEau1xy-RwL2eN478iexyHn-hckCEWuBJ5S1JLFZm5qnt6yWy9WJGDwJpSyy4xBhWqXeGoerFEaerD_897fCh-xEl9FyB4gVsSey1vapj78r3gPQBe-qa0_kCRQXhH6JV7hZh2e3G-hTTLj55ko0FXCIL9x_rr5ix5mDCc",
                        "user": {
                          "name": "John",
                          "surname": "The Ripper",
                          "email": "john@daedalus-project.io",
                          "active": 1,
                          "is_admin": 0,
                          "phone": "",
                          "api_key": "Jwm.NuibXnNM.z89c6CHsknxlEXf3UGU"
                        }
                      },
                      "message": "Auth Successful."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Examples of invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 0,
                      "message": "e-mail is invalid."
                    }
                  },
                  "1": {
                    "value": {
                      "status": 0,
                      "message": "No e-mail provided. No password provided."
                    }
                  },
                  "2": {
                    "value": {
                      "status": 0,
                      "message": "e-mail is invalid. No password provided."
                    }
                  },
                  "3": {
                    "value": {
                      "status": 0,
                      "message": "No password provided."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Examples of falied login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "Wrong e-mail or password."
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 0,
                      "message": "Wrong e-mail or password."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "User Register",
        "description": "Admin users are allowed to register new users",
        "security": [
          {
            "token_security": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "surname",
                  "e-mail"
                ],
                "properties": {
                  "surname": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "e-mail": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "0": {
                  "value": {
                    "new_user_data": {
                      "name": "Marvin",
                      "surname": "The Robot",
                      "email": "marvin@robot.com"
                    }
                  }
                },
                "1": {
                  "value": {
                    "new_user_data": {
                      "name": "John",
                      "surname": "The Ripper",
                      "email": "john@daedalus-project.io"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_hidden_data": {
                      "type": "object",
                      "properties": {
                        "new_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "auth_token": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "is_super_admin": {
                              "type": "integer"
                            },
                            "id": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "User has been registered."
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        1
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 1,
                      "message": "User has been registered.",
                      "_hidden_data": {
                        "new_user": {
                          "email": "marvin@daedalus-project.io",
                          "id": 3,
                          "auth_token": "FNIUcTWuD2QExGrDcg.FbvqwPRg0iOuAd1W/S33S9jizCynW3gzHt6ZkYxLOs2j"
                        },
                        "user": {
                          "is_super_admin": 1,
                          "id": 1
                        }
                      }
                    }
                  },
                  "1": {
                    "value": {
                      "status": 1,
                      "message": "User has been registered."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Wrong data responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_hidden_data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "is_super_admin": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 0,
                      "message": "There already exists a user using this e-mail.",
                      "_hidden_data": {
                        "user": {
                          "id": 1,
                          "is_super_admin": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Non admin user response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "You are not an admin user."
                      ]
                    },
                    "status": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    }
                  }
                },
                "examples": {
                  "0": {
                    "value": {
                      "status": 0,
                      "message": "You are not an admin user."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "parameters": [
        {
          "name": "pretty_print",
          "in": "query",
          "description": "Pretty print response",
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by user name",
        "description": "Some description of the operation. \nYou can use `markdown` here.\n",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_email",
            "in": "query",
            "description": "Filter users without email",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "username": "user1",
                  "email": "user@example.com"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "Updated user object",
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Email": {
        "description": "User email address",
        "type": "string",
        "format": "test",
        "example": "john.smith@example.com"
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "description": "User supplied username",
            "type": "string",
            "minLength": 4,
            "example": "John78"
          },
          "firstName": {
            "description": "User first name",
            "type": "string",
            "minLength": 1,
            "example": "John"
          },
          "lastName": {
            "description": "User last name",
            "type": "string",
            "minLength": 1,
            "example": "Smith"
          },
          "email": {
            "$ref": "#/components/schemas/Email"
          }
        }
      }
    },
    "headers": {
      "ExpiresAfter": {
        "description": "date in UTC when token expires",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "securitySchemes": {
      "token_security": {
        "type": "http",
        "scheme": "basic",
        "description": "Once logged, users have to provide their session token for each request. As API uses http_basic for getting user token `Username` field is `session_token` and `password` should be a valid session token."
      }
    }
  }
}
